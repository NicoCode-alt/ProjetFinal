{% extends 'base.html.twig' %}

{% block title %}Acheter{% endblock %}

{% block body %}

    <div class="row responsive_pay_cart mt-4">
        <div class="col-8 img_remerciement"></div>
        <div class="col-4 title_pay_cart">
            <h1>Confirmez votre commande</h1>
            <h3>Commande {{ orderId }}</h3>
        </div>
    </div>


     
   
    <div class="container row pt-3">
        {% for item in items %}
           <div class="container-fluid d-flex align-items-center justify-content-around">
                <img src="{{ item.imageUrl }}" alt="Cover" style="width:5rem"><br>
                <strong><p>{{ item.albumName }} </p></strong>
                
                    <p>{{ item.artistName }} </p>
                    x {{ item.albumQuantity }}
                    <strong>{{ item.albumQuantity * item.albumPrice }} euros</strong>
           </div>

        {% endfor %}
        <h5 class="self-end"><strong>Total {{ finalPrice }} euros</strong> </h5>
    </div>

    <hr>

    <form action="{{ path('paiement_load', {'id':orderId}) }}" method="post" id="payment-form">
      <div class="form-row">
        <div id="card-elements"></div>

        <script src="https://js.stripe.com/v3/"></script>

        <div id="card-erros" role="alert"></div>

      </div>
      <button class="btn btn-primary mt-4">
          Acheter {{ finalPrice }} euros
      </button>
    </form>

{% endblock %}

{% block JavaScript %}

  <script>
    var stripeToken = "{{ stripe_public_key_test }}";

    var stripe = Stripe(stripeToken);
    var elements = stripe.elements();
    var subscription = "{{ items.orderId }}";
    var clientSecret = {{ intentScret }};
    var cardholderName = {{ app.user.lastname }};
    var cardholderEmail = {{ app.user.email }};

    var styleCustom = {
      base:{
        fontSize: '16px',
        color: '#25332d'
      }
    }

    var card = elements.create('card', {style: styleCustom});

    card.mount("#card-elements");

    card.addEventListener('change', function(event){
      var displayError = document.getElementById('card-errors');

      if(event.error) {
        displayError.textContent = event.error.message;
      } else {
        displayError.textContent = "";
      }
    });

  var form = document.getElementById('payment-form');

  form.addEventListener('submit', function(event) => {
    event.preventDefault();

    stripe.handleCardPayment(
      clientSecret,
      card,
      {
        paiement_method_data: {
          billing_details:{
            name: cardholderName,
            email: cardholderEmail
          }
        }
      }
    ).then((result)=>{
      if(result.error){

      } else if ('paymentIntent' in result){
        stripeTokenHandler(result.paymentIntent);
      }
    })
  });

  function stripeTokenHandler(intent){
    var form = document.getElementById('payment-form');
    var inputIntentId = document.createElement('input') ;
    var inputIntentPaymentMethod = document.createElement('input');
    var inputIntentStatus = document.createElement('input');
    var inputSubscription = document.createElement('input');

    inputIntentPaymentMethod.setAttribute('type', 'hidden');
    inputIntentPaymentMethod.setAttribute('name', 'stripeIntentPaymentMethod');
    inputIntentPaymentMethod.setAttribute('value', 'intent.payment-method');

    inputIntentId.setAttribute('type', 'hidden');
    inputIntentId.setAttribute('name', 'stripeIntentId');
    inputIntentId.setAttribute('value', 'intent.id');

    inputIntentStatus.setAttribute('type', 'hidden');
    inputIntentStatus.setAttribute('name', 'stripeIntentStatus');
    inputIntentStatus.setAttribute('value', 'intent.status');

    inputSubscription.setAttribute('type', 'hidden');
    inputSubscription.setAttribute('name', 'subscription');
    inputSubscription.setAttribute('value', 'subscription');

    form.appendChild(inputIntentPaymentMethod);
    form.appendChild(inputIntentId);
    form.appendChild(inputIntentStatus);
    form.appendChild(inputSubscription);
    form.submit();

  }

  </script>
  {% endblock %}